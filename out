
> sorting@1.0.0 test /Users/jkeam/dev/projects/sorting
> mocha



  Sort
    selection sort
      ✓ should sort 
      ✓ should sort already sorted list 
    bubble sort
      ✓ should sort 
      ✓ should sort already sorted list 
    insertion sort
      ✓ should sort 
      ✓ should sort already sorted list 
    mergesort sort
      ✓ should sort 
      ✓ should sort already sorted list 
    quicksort sort
recursiveSort: {0, 8} -- 22,14,85,23,1,7,9,10,36
calling partition: 0, 8
22 >= 22
22 >= 14
going right
2, 85
22 <= 36
going left
7, 10
before swap: 2 and 7
swapping
85
10
i: 2 j: 7
22 >= 10
going right
3, 23
22 <= 85
going left
6, 9
before swap: 3 and 6
swapping
23
9
i: 3 j: 6
22 >= 9
22 >= 1
22 >= 7
going right
6, 23
22 <= 23
going left
5, 7
i: 6 j: 5
swapping
22
7
part: 5, 7,14,10,9,1,22,23,85,36
recursiveSort left, 0 - 5
recursiveSort: {0, 5} -- 7,14,10,9,1,22,23,85,36
calling partition: 0, 5
7 >= 7
going right
1, 14
7 <= 22
going left
4, 1
before swap: 1 and 4
swapping
14
1
i: 1 j: 4
7 >= 1
going right
2, 10
7 <= 14
7 <= 9
7 <= 10
going left
1, 1
i: 2 j: 1
swapping
7
1
part: 1, 1,7,10,9,14,22,23,85,36
recursiveSort left, 0 - 1
recursiveSort: {0, 1} -- 1,7,10,9,14,22,23,85,36
calling partition: 0, 1
1 >= 1
going right
1, 7
1 <= 7
going left
0, 1
i: 1 j: 0
swapping
1
1
part: 0, 1,7,10,9,14,22,23,85,36
recursiveSort left, 0 - 0
recursiveSort: {0, 0} -- 1,7,10,9,14,22,23,85,36
recursiveSort right, left was 0 - 0
recursiveSort: {1, 1} -- 1,7,10,9,14,22,23,85,36
recursiveSort right, left was 0 - 1
recursiveSort: {2, 5} -- 1,7,10,9,14,22,23,85,36
calling partition: 2, 5
10 >= 10
10 >= 9
going right
4, 14
10 <= 22
10 <= 14
going left
3, 9
i: 4 j: 3
swapping
10
9
part: 3, 1,7,9,10,14,22,23,85,36
recursiveSort left, 2 - 3
recursiveSort: {2, 3} -- 1,7,9,10,14,22,23,85,36
calling partition: 2, 3
9 >= 9
going right
3, 10
9 <= 10
going left
2, 9
i: 3 j: 2
swapping
9
9
part: 2, 1,7,9,10,14,22,23,85,36
recursiveSort left, 2 - 2
recursiveSort: {2, 2} -- 1,7,9,10,14,22,23,85,36
recursiveSort right, left was 2 - 2
recursiveSort: {3, 3} -- 1,7,9,10,14,22,23,85,36
recursiveSort right, left was 2 - 3
recursiveSort: {4, 5} -- 1,7,9,10,14,22,23,85,36
calling partition: 4, 5
14 >= 14
going right
5, 22
14 <= 22
going left
4, 14
i: 5 j: 4
swapping
14
14
part: 4, 1,7,9,10,14,22,23,85,36
recursiveSort left, 4 - 4
recursiveSort: {4, 4} -- 1,7,9,10,14,22,23,85,36
recursiveSort right, left was 4 - 4
recursiveSort: {5, 5} -- 1,7,9,10,14,22,23,85,36
recursiveSort right, left was 0 - 5
recursiveSort: {6, 8} -- 1,7,9,10,14,22,23,85,36
calling partition: 6, 8
23 >= 23
going right
7, 85
23 <= 36
23 <= 85
going left
6, 23
i: 7 j: 6
swapping
23
23
part: 6, 1,7,9,10,14,22,23,85,36
recursiveSort left, 6 - 6
recursiveSort: {6, 6} -- 1,7,9,10,14,22,23,85,36
recursiveSort right, left was 6 - 6
recursiveSort: {7, 8} -- 1,7,9,10,14,22,23,85,36
calling partition: 7, 8
85 >= 85
going right
8, 36
going left
8, 36
i: 8 j: 8
swapping
85
36
part: 8, 1,7,9,10,14,22,23,36,85
recursiveSort left, 7 - 8
recursiveSort: {7, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 7, 8
36 >= 36
going right
8, 85
36 <= 85
going left
7, 36
i: 8 j: 7
swapping
36
36
part: 7, 1,7,9,10,14,22,23,36,85
recursiveSort left, 7 - 7
recursiveSort: {7, 7} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 7 - 7
recursiveSort: {8, 8} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 7 - 8
recursiveSort: {9, 8} -- 1,7,9,10,14,22,23,36,85
      ✓ should sort 
recursiveSort: {0, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 0, 8
1 >= 1
going right
1, 7
1 <= 85
1 <= 36
1 <= 23
1 <= 22
1 <= 14
1 <= 10
1 <= 9
1 <= 7
going left
0, 1
i: 1 j: 0
swapping
1
1
part: 0, 1,7,9,10,14,22,23,36,85
recursiveSort left, 0 - 0
recursiveSort: {0, 0} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 0 - 0
recursiveSort: {1, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 1, 8
7 >= 7
going right
2, 9
7 <= 85
7 <= 36
7 <= 23
7 <= 22
7 <= 14
7 <= 10
7 <= 9
going left
1, 7
i: 2 j: 1
swapping
7
7
part: 1, 1,7,9,10,14,22,23,36,85
recursiveSort left, 1 - 1
recursiveSort: {1, 1} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 1 - 1
recursiveSort: {2, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 2, 8
9 >= 9
going right
3, 10
9 <= 85
9 <= 36
9 <= 23
9 <= 22
9 <= 14
9 <= 10
going left
2, 9
i: 3 j: 2
swapping
9
9
part: 2, 1,7,9,10,14,22,23,36,85
recursiveSort left, 2 - 2
recursiveSort: {2, 2} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 2 - 2
recursiveSort: {3, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 3, 8
10 >= 10
going right
4, 14
10 <= 85
10 <= 36
10 <= 23
10 <= 22
10 <= 14
going left
3, 10
i: 4 j: 3
swapping
10
10
part: 3, 1,7,9,10,14,22,23,36,85
recursiveSort left, 3 - 3
recursiveSort: {3, 3} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 3 - 3
recursiveSort: {4, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 4, 8
14 >= 14
going right
5, 22
14 <= 85
14 <= 36
14 <= 23
14 <= 22
going left
4, 14
i: 5 j: 4
swapping
14
14
part: 4, 1,7,9,10,14,22,23,36,85
recursiveSort left, 4 - 4
recursiveSort: {4, 4} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 4 - 4
recursiveSort: {5, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 5, 8
22 >= 22
going right
6, 23
22 <= 85
22 <= 36
22 <= 23
going left
5, 22
i: 6 j: 5
swapping
22
22
part: 5, 1,7,9,10,14,22,23,36,85
recursiveSort left, 5 - 5
recursiveSort: {5, 5} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 5 - 5
recursiveSort: {6, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 6, 8
23 >= 23
going right
7, 36
23 <= 85
23 <= 36
going left
6, 23
i: 7 j: 6
swapping
23
23
part: 6, 1,7,9,10,14,22,23,36,85
recursiveSort left, 6 - 6
recursiveSort: {6, 6} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 6 - 6
recursiveSort: {7, 8} -- 1,7,9,10,14,22,23,36,85
calling partition: 7, 8
36 >= 36
going right
8, 85
36 <= 85
going left
7, 36
i: 8 j: 7
swapping
36
36
part: 7, 1,7,9,10,14,22,23,36,85
recursiveSort left, 7 - 7
recursiveSort: {7, 7} -- 1,7,9,10,14,22,23,36,85
recursiveSort right, left was 7 - 7
recursiveSort: {8, 8} -- 1,7,9,10,14,22,23,36,85
      ✓ should sort already sorted list 


  10 passing (30ms)

